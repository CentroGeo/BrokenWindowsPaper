[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BOOK_PAPER",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "Aquí va la introducción y algunos antecedentes Tener muy claro el planteamiento del problema Definir subsecciones"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data Acquisition and Preprocessing",
    "section": "",
    "text": "3 Adquisition\nCenso de poblacion 2020\nDescarga masiva Manzanas\nLlamadas del 911\nConstruido a partir de cuatro dimensiónes (con base a censo 2010) y reducidad a una componente principal por PCA. Las dimensiones que se exponen en el articulo son: - Porcentaje de masculinos de 15 a 29 - Porcentaje de población sin servicios a salud - Promedio de habitantes que ocupan un hogar privado - Porcentaje de personas que hablan una lengua indigena\nCon base al Censo de población de 2020, las dimensiones se resumen de la forma:\n\\[M_{n-1} = f(C)\\] \\[ C \\gets M_{n-1}\\]\nUNION DE RESULTADOS"
  },
  {
    "objectID": "data.html#metro",
    "href": "data.html#metro",
    "title": "2  Data Acquisition and Preprocessing",
    "section": "7.1 METRO",
    "text": "7.1 METRO\n\nMETRO_CDMX = gpd.read_file(Entradas +'STC_Metro.json').to_crs(6362)\nMETRO_CDMX = METRO_CDMX[['CVE_EST','geometry']]\nMETRO_CDMX.head(2)\n\n\n\n\n\n  \n    \n      \n      CVE_EST\n      geometry\n    \n  \n  \n    \n      0\n      STC0101\n      POINT Z (2806320.502 827386.150 0.000)\n    \n    \n      1\n      STC0102\n      POINT Z (2805539.596 826882.979 0.000)\n    \n  \n\n\n\n\n\nbase = COLONIAS_CDMX.plot(color ='black',figsize=(5,5))\nMETRO_CDMX.plot(ax = base, color = 'red', markersize = 2, figsize=(5,5))\n\n<AxesSubplot: >\n\n\n\n\n\n\nMETRO_CDMX = gpd.sjoin(COLONIAS_CDMX, \n                        METRO_CDMX[['CVE_EST','geometry']], \n                         how = \"inner\", \n                         op = 'contains').rename({'CVEDT': 'MUN', \n                                                  'CVE_EST': 'METRO'}, axis = 1)\nMETRO_CDMX.head(2)\n\n\n\n\n\n  \n    \n      \n      ENT\n      MUN\n      NOMDT\n      DTTOLOC\n      CVE_COL\n      NOMUT\n      ID\n      geometry\n      index_right\n      METRO\n    \n  \n  \n    \n      2\n      9\n      002\n      AZCAPOTZALCO\n      05\n      02-005\n      ANGEL ZIMBRON\n      3\n      POLYGON ((2794087.362 833224.900, 2794100.255 ...\n      102\n      STC0704\n    \n    \n      21\n      9\n      002\n      AZCAPOTZALCO\n      03\n      02-025\n      EL ROSARIO C (U HAB)\n      22\n      POLYGON ((2793328.039 837630.178, 2793307.521 ...\n      88\n      STC0601\n    \n  \n\n\n\n\n\nMETRO_COL = pd.DataFrame(METRO_CDMX.groupby(['CVE_COL']).agg({'METRO':'count'}).reset_index())\nMETRO_MUN = pd.DataFrame(METRO_CDMX.groupby(['MUN']).agg({'METRO':'count'}).reset_index())\n\n\n### Resultados Concentración de desventajas + Desorden Social + Desorden Físico + METRO\n### NIVEL COLONIA \n\nCOLONIA_RESULTADOS = COLONIA_RESULTADOS.merge(METRO_COL, \n                                              left_on = 'CVE_COL', \n                                              right_on = 'CVE_COL',\n                                              how = 'left')\nCOLONIA_RESULTADOS.head(5)\n\n\n\n\n\n  \n    \n      \n      CVE_COL\n      DIS_COL\n      SOCIAL_COL\n      FISICO_COL\n      METRO\n    \n  \n  \n    \n      0\n      02-001\n      -1.121714\n      -0.899873\n      -1.004272\n      NaN\n    \n    \n      1\n      02-002\n      -0.533961\n      0.628847\n      -0.193206\n      NaN\n    \n    \n      2\n      02-003\n      -1.193403\n      -1.425013\n      -1.044140\n      NaN\n    \n    \n      3\n      02-005\n      -1.175400\n      -0.988030\n      -0.609931\n      1.0\n    \n    \n      4\n      02-006\n      -0.459954\n      1.012260\n      -0.483310\n      NaN\n    \n  \n\n\n\n\n\n### Resultados Concentración de desventajas + Desorden Social + Desorden Físico + METRO\n### NIVEL ALCALDIA \n\nALCALDIA_RESULTADOS = ALCALDIA_RESULTADOS.merge(METRO_MUN,\n                                                left_on = 'MUN',\n                                                right_on = 'MUN',\n                                                how = 'left')\nALCALDIA_RESULTADOS.head(5)\n\n\n\n\n\n  \n    \n      \n      MUN\n      DIS_MUN\n      SOCIAL_MUN\n      FISICO_MUN\n      METRO\n    \n  \n  \n    \n      0\n      002\n      -0.996294\n      -0.839195\n      -0.647192\n      10.0\n    \n    \n      1\n      003\n      -0.069455\n      0.905507\n      0.744289\n      6.0\n    \n    \n      2\n      004\n      -1.304359\n      -2.897155\n      -2.414544\n      NaN\n    \n    \n      3\n      005\n      2.040898\n      3.474421\n      3.265199\n      20.0\n    \n    \n      4\n      006\n      -0.650310\n      -0.448365\n      -0.774346\n      10.0"
  },
  {
    "objectID": "data.html#metrobus",
    "href": "data.html#metrobus",
    "title": "2  Data Acquisition and Preprocessing",
    "section": "7.2 METROBUS",
    "text": "7.2 METROBUS\n\nMETROBUS_CDMX = gpd.read_file(Entradas +'STC_MetroBus.json').drop(['id', 'description', \n                                                                   'styleUrl', 'stroke-opacity', 'stroke',\n                                                                   'icon-opacity', 'icon-color', 'icon-scale', \n                                                                   'icon'], axis = 1).to_crs(6362)\nMETROBUS_CDMX.head(2)\n\n\n\n\n\n  \n    \n      \n      SISTEMA\n      NOMBRE\n      LINEA\n      EST\n      CVE_EST\n      CVE_EOD17\n      TIPO\n      ALCALDIAS\n      AÑO\n      geometry\n    \n  \n  \n    \n      0\n      Metrobús\n      Terminal 1 - Aeropuerto\n      04\n      41\n      MB0441\n      \n      \n      Venustiano Carranza\n      \n      POINT Z (2805342.914 829460.805 0.000)\n    \n    \n      1\n      Metrobús\n      Terminal 2 - Aeropuerto\n      04\n      42\n      MB0442\n      \n      \n      Venustiano Carranza\n      \n      POINT Z (2806045.690 827948.207 0.000)\n    \n  \n\n\n\n\n\nbase = COLONIAS_CDMX.plot(color ='black',figsize=(5,5))\nMETROBUS_CDMX.plot(ax = base, color = 'red', markersize = 2, figsize=(5,5))\n\n<AxesSubplot: >\n\n\n\n\n\n\nMETROBUS_CDMX = gpd.sjoin(COLONIAS_CDMX, \n                          METROBUS_CDMX[['CVE_EST','geometry']], \n                          how = \"inner\", \n                          op = 'contains').rename({'CVEDT': 'MUN', \n                                                   'CVE_EST': 'METROBUS'}, axis = 1)\nMETROBUS_CDMX.head(2)\n\n\n\n\n\n  \n    \n      \n      ENT\n      MUN\n      NOMDT\n      DTTOLOC\n      CVE_COL\n      NOMUT\n      ID\n      geometry\n      index_right\n      METROBUS\n    \n  \n  \n    \n      20\n      9\n      002\n      AZCAPOTZALCO\n      03\n      02-024\n      EL ROSARIO B (U HAB)\n      21\n      POLYGON ((2792441.340 837336.669, 2792439.955 ...\n      238\n      MB0603\n    \n    \n      21\n      9\n      002\n      AZCAPOTZALCO\n      03\n      02-025\n      EL ROSARIO C (U HAB)\n      22\n      POLYGON ((2793328.039 837630.178, 2793307.521 ...\n      236\n      MB0601\n    \n  \n\n\n\n\n\nMETROBUS_COL = pd.DataFrame(METROBUS_CDMX.groupby(['CVE_COL']).agg({'METROBUS':'count'}).reset_index())\nMETROBUS_MUN = pd.DataFrame(METROBUS_CDMX.groupby(['MUN']).agg({'METROBUS':'count'}).reset_index())\n\n\n### Resultados Concentración de desventajas + Desorden Social + Desorden Físico + METRO + METROBUS\n### NIVEL COLONIA \n\nCOLONIA_RESULTADOS = COLONIA_RESULTADOS.merge(METROBUS_COL, \n                                              left_on = 'CVE_COL', \n                                              right_on = 'CVE_COL',\n                                              how = 'left')\nCOLONIA_RESULTADOS.head(2)\n\n\n\n\n\n  \n    \n      \n      CVE_COL\n      DIS_COL\n      SOCIAL_COL\n      FISICO_COL\n      METRO\n      METROBUS\n    \n  \n  \n    \n      0\n      02-001\n      -1.121714\n      -0.899873\n      -1.004272\n      NaN\n      NaN\n    \n    \n      1\n      02-002\n      -0.533961\n      0.628847\n      -0.193206\n      NaN\n      NaN\n    \n  \n\n\n\n\n\n### Resultados Concentración de desventajas + Desorden Social + Desorden Físico + METRO + METROBUS\n### NIVEL ALCALDIA \n\nALCALDIA_RESULTADOS = ALCALDIA_RESULTADOS.merge(METROBUS_MUN,\n                                                left_on = 'MUN',\n                                                right_on = 'MUN',\n                                                how = 'left')\nALCALDIA_RESULTADOS.head(5)\n\n\n\n\n\n  \n    \n      \n      MUN\n      DIS_MUN\n      SOCIAL_MUN\n      FISICO_MUN\n      METRO\n      METROBUS\n    \n  \n  \n    \n      0\n      002\n      -0.996294\n      -0.839195\n      -0.647192\n      10.0\n      8.0\n    \n    \n      1\n      003\n      -0.069455\n      0.905507\n      0.744289\n      6.0\n      11.0\n    \n    \n      2\n      004\n      -1.304359\n      -2.897155\n      -2.414544\n      NaN\n      NaN\n    \n    \n      3\n      005\n      2.040898\n      3.474421\n      3.265199\n      20.0\n      72.0\n    \n    \n      4\n      006\n      -0.650310\n      -0.448365\n      -0.774346\n      10.0\n      17.0"
  },
  {
    "objectID": "data.html#denue-tiendas-bares-y-restaurantes",
    "href": "data.html#denue-tiendas-bares-y-restaurantes",
    "title": "2  Data Acquisition and Preprocessing",
    "section": "7.3 DENUE: Tiendas, Bares y Restaurantes",
    "text": "7.3 DENUE: Tiendas, Bares y Restaurantes\n\nDENUE = pd.read_csv(Entradas + 'DENUE.csv', encoding = 'Latin-1').drop(['entidad_cvegeo'], axis = 1)\nDENUE = gpd.GeoDataFrame(DENUE,\n                         geometry = gpd.points_from_xy(DENUE.denue_longitud,\n                                                       DENUE.denue_latitud),\n                         crs=4326).drop(['denue_latitud',\n                                         'denue_longitud'], axis = 1).to_crs(6362)\nDENUE.head(2)\n\n\n\n\n\n  \n    \n      \n      actividad_nombre\n      actividad_cve\n      geometry\n    \n  \n  \n    \n      0\n      Comercio al por menor de vinos y licores\n      461211\n      POINT (2803952.280 831440.241)\n    \n    \n      1\n      Comercio al por menor de vinos y licores\n      461211\n      POINT (2805964.648 834595.217)\n    \n  \n\n\n\n\n\ndef CLASE (codigo):\n    Tienda = ['461110', '461211', '461212', '461213', '461220', '462111', '462112', \n              '462210', '464111', '464112']\n    Bares = ['722411', '722412']\n    Restaurante = ['722511', '722512', '722513', '722514', '722515', '722516', '722517', '722518', '722519']\n    usos = {'Tienda': Tienda, 'Bares':Bares, 'Restaurante': Restaurante}\n    for actividad, claves in usos.items():\n        for c in claves:\n            if str(codigo).startswith(c):\n                return actividad\nclases = DENUE['actividad_cve'].apply(CLASE)\n\nDENUE['Clase'] = clases\nDENUE = DENUE.drop(['actividad_nombre', \n                    'actividad_cve'], axis = 1)\nDENUE.head(5)\n\n\n\n\n\n  \n    \n      \n      geometry\n      Clase\n    \n  \n  \n    \n      0\n      POINT (2803952.280 831440.241)\n      Tienda\n    \n    \n      1\n      POINT (2805964.648 834595.217)\n      Tienda\n    \n    \n      2\n      POINT (2799011.530 839362.925)\n      Tienda\n    \n    \n      3\n      POINT (2799739.565 841534.399)\n      Tienda\n    \n    \n      4\n      POINT (2803412.265 837674.031)\n      Tienda\n    \n  \n\n\n\n\n\nCLASE_DENUE = gpd.sjoin(COLONIAS_CDMX.drop(['ENT','NOMDT','NOMUT','DTTOLOC','ID'], axis = 1),\n                        DENUE,\n                        how = \"inner\", \n                        op = 'contains').drop(['geometry','index_right'], axis = 1)\nCLASE_DENUE.head(2)\n\n\n\n\n\n  \n    \n      \n      CVEDT\n      CVE_COL\n      Clase\n    \n  \n  \n    \n      0\n      002\n      02-001\n      Restaurante\n    \n    \n      0\n      002\n      02-001\n      Restaurante\n    \n  \n\n\n\n\n\nDENUE_DMY = pd.get_dummies(CLASE_DENUE, \n                           columns=[\"Clase\"],\n                           prefix=[\"DM\"]).rename({'CVEDT': 'MUN'}, axis = 1)\n\nDENUE_DMY.head(3)\n\n\n\n\n\n  \n    \n      \n      MUN\n      CVE_COL\n      DM_Bares\n      DM_Restaurante\n      DM_Tienda\n    \n  \n  \n    \n      0\n      002\n      02-001\n      0\n      1\n      0\n    \n    \n      0\n      002\n      02-001\n      0\n      1\n      0\n    \n    \n      0\n      002\n      02-001\n      0\n      0\n      1\n    \n  \n\n\n\n\n\nDENUE_COL = pd.DataFrame(DENUE_DMY.groupby(['CVE_COL']).agg({'DM_Bares':'count',\n                                                             'DM_Restaurante': 'count',\n                                                             'DM_Tienda': 'count'}).reset_index()).rename({'DM_Bares': 'BAR',\n                                                                                                           'DM_Restaurante': 'RESTAURANTE',\n                                                                                                           'DM_Tienda': 'TIENDA'},\n                                                                                                          axis = 1)\n\n\nDENUE_MUN = pd.DataFrame(DENUE_DMY.groupby(['MUN']).agg({'DM_Bares':'count',\n                                                         'DM_Restaurante': 'count',\n                                                         'DM_Tienda': 'count'}).reset_index()).rename({'DM_Bares': 'BAR',\n                                                                                                       'DM_Restaurante': 'RESTAURANTE',\n                                                                                                       'DM_Tienda': 'TIENDA'},\n                                                                                                      axis = 1)\n\n\nCOLONIA_RESULTADOS = COLONIA_RESULTADOS.merge(DENUE_COL, \n                                              left_on = 'CVE_COL', \n                                              right_on = 'CVE_COL',\n                                              how = 'left')\nCOLONIA_RESULTADOS.head(5)\n\n\n\n\n\n  \n    \n      \n      CVE_COL\n      DIS_COL\n      SOCIAL_COL\n      FISICO_COL\n      METRO\n      METROBUS\n      BAR\n      RESTAURANTE\n      TIENDA\n    \n  \n  \n    \n      0\n      02-001\n      -1.121714\n      -0.899873\n      -1.004272\n      NaN\n      NaN\n      19.0\n      19.0\n      19.0\n    \n    \n      1\n      02-002\n      -0.533961\n      0.628847\n      -0.193206\n      NaN\n      NaN\n      28.0\n      28.0\n      28.0\n    \n    \n      2\n      02-003\n      -1.193403\n      -1.425013\n      -1.044140\n      NaN\n      NaN\n      17.0\n      17.0\n      17.0\n    \n    \n      3\n      02-005\n      -1.175400\n      -0.988030\n      -0.609931\n      1.0\n      NaN\n      44.0\n      44.0\n      44.0\n    \n    \n      4\n      02-006\n      -0.459954\n      1.012260\n      -0.483310\n      NaN\n      NaN\n      66.0\n      66.0\n      66.0\n    \n  \n\n\n\n\n\nALCALDIA_RESULTADOS = ALCALDIA_RESULTADOS.merge(DENUE_MUN,\n                                                left_on = 'MUN',\n                                                right_on = 'MUN',\n                                                how = 'left')\nALCALDIA_RESULTADOS.head(5)\n\n\n\n\n\n  \n    \n      \n      MUN\n      DIS_MUN\n      SOCIAL_MUN\n      FISICO_MUN\n      METRO\n      METROBUS\n      BAR\n      RESTAURANTE\n      TIENDA\n    \n  \n  \n    \n      0\n      002\n      -0.996294\n      -0.839195\n      -0.647192\n      10.0\n      8.0\n      4818\n      4818\n      4818\n    \n    \n      1\n      003\n      -0.069455\n      0.905507\n      0.744289\n      6.0\n      11.0\n      6182\n      6182\n      6182\n    \n    \n      2\n      004\n      -1.304359\n      -2.897155\n      -2.414544\n      NaN\n      NaN\n      2189\n      2189\n      2189\n    \n    \n      3\n      005\n      2.040898\n      3.474421\n      3.265199\n      20.0\n      72.0\n      13156\n      13156\n      13156\n    \n    \n      4\n      006\n      -0.650310\n      -0.448365\n      -0.774346\n      10.0\n      17.0\n      4405\n      4405\n      4405"
  },
  {
    "objectID": "data.html#densidad-de-población",
    "href": "data.html#densidad-de-población",
    "title": "2  Data Acquisition and Preprocessing",
    "section": "7.4 Densidad de Población",
    "text": "7.4 Densidad de Población\n\nDEN_POB = pd.DataFrame(INTERSECCION.groupby(['CVE_COL']).agg({'POBTOT':'sum'}).reset_index())\n\n\nDEN_POB = COLONIAS_CDMX.merge(DEN_POB,\n                              left_on = 'CVE_COL',\n                              right_on = 'CVE_COL',\n                              how = 'left').drop(['ENT','NOMDT',\n                                                  'NOMUT','DTTOLOC',\n                                                  'ID'], \n                                                 axis = 1).rename({'CVEDT': 'MUN'}, axis = 1)\n\nDEN_POB['DEN_POB'] = DEN_POB['POBTOT']/DEN_POB.geometry.area\n\n\nDENSIDAD_COLONIA = pd.DataFrame(DEN_POB.groupby(['CVE_COL']).agg({'DEN_POB':'sum'}).reset_index())\n\nDENSIDAD_MUN = pd.DataFrame(DEN_POB.groupby(['MUN']).agg({'DEN_POB':'sum'}).reset_index())\n\n\nCOLONIA_RESULTADOS = COLONIA_RESULTADOS.merge(DENSIDAD_COLONIA, \n                                              left_on = 'CVE_COL', \n                                              right_on = 'CVE_COL',\n                                              how = 'left')\nCOLONIA_RESULTADOS.head(5)\n\n\n\n\n\n  \n    \n      \n      CVE_COL\n      DIS_COL\n      SOCIAL_COL\n      FISICO_COL\n      METRO\n      METROBUS\n      BAR\n      RESTAURANTE\n      TIENDA\n      DEN_POB\n    \n  \n  \n    \n      0\n      02-001\n      -1.121714\n      -0.899873\n      -1.004272\n      NaN\n      NaN\n      19.0\n      19.0\n      19.0\n      0.018946\n    \n    \n      1\n      02-002\n      -0.533961\n      0.628847\n      -0.193206\n      NaN\n      NaN\n      28.0\n      28.0\n      28.0\n      0.023829\n    \n    \n      2\n      02-003\n      -1.193403\n      -1.425013\n      -1.044140\n      NaN\n      NaN\n      17.0\n      17.0\n      17.0\n      0.013540\n    \n    \n      3\n      02-005\n      -1.175400\n      -0.988030\n      -0.609931\n      1.0\n      NaN\n      44.0\n      44.0\n      44.0\n      0.009680\n    \n    \n      4\n      02-006\n      -0.459954\n      1.012260\n      -0.483310\n      NaN\n      NaN\n      66.0\n      66.0\n      66.0\n      0.015130\n    \n  \n\n\n\n\n\nALCALDIA_RESULTADOS = ALCALDIA_RESULTADOS.merge(DENSIDAD_MUN,\n                                                left_on = 'MUN',\n                                                right_on = 'MUN',\n                                                how = 'left')\nALCALDIA_RESULTADOS.head(5)\n\n\n\n\n\n  \n    \n      \n      MUN\n      DIS_MUN\n      SOCIAL_MUN\n      FISICO_MUN\n      METRO\n      METROBUS\n      BAR\n      RESTAURANTE\n      TIENDA\n      DEN_POB\n    \n  \n  \n    \n      0\n      002\n      -0.996294\n      -0.839195\n      -0.647192\n      10.0\n      8.0\n      4818\n      4818\n      4818\n      2.188289\n    \n    \n      1\n      003\n      -0.069455\n      0.905507\n      0.744289\n      6.0\n      11.0\n      6182\n      6182\n      6182\n      2.669713\n    \n    \n      2\n      004\n      -1.304359\n      -2.897155\n      -2.414544\n      NaN\n      NaN\n      2189\n      2189\n      2189\n      0.343442\n    \n    \n      3\n      005\n      2.040898\n      3.474421\n      3.265199\n      20.0\n      72.0\n      13156\n      13156\n      13156\n      4.554329\n    \n    \n      4\n      006\n      -0.650310\n      -0.448365\n      -0.774346\n      10.0\n      17.0\n      4405\n      4405\n      4405\n      1.139269\n    \n  \n\n\n\n\n\n#### Se exportan los resultados \n\nCOLONIA_RESULTADOS\n\nALCALDIA_RESULTADOS\n\n\n\n\n\n  \n    \n      \n      MUN\n      DIS_MUN\n      SOCIAL_MUN\n      FISICO_MUN\n      METRO\n      METROBUS\n      BAR\n      RESTAURANTE\n      TIENDA\n      DEN_POB\n    \n  \n  \n    \n      0\n      002\n      -0.996294\n      -0.839195\n      -0.647192\n      10.0\n      8.0\n      4818\n      4818\n      4818\n      2.188289\n    \n    \n      1\n      003\n      -0.069455\n      0.905507\n      0.744289\n      6.0\n      11.0\n      6182\n      6182\n      6182\n      2.669713\n    \n    \n      2\n      004\n      -1.304359\n      -2.897155\n      -2.414544\n      NaN\n      NaN\n      2189\n      2189\n      2189\n      0.343442\n    \n    \n      3\n      005\n      2.040898\n      3.474421\n      3.265199\n      20.0\n      72.0\n      13156\n      13156\n      13156\n      4.554329\n    \n    \n      4\n      006\n      -0.650310\n      -0.448365\n      -0.774346\n      10.0\n      17.0\n      4405\n      4405\n      4405\n      1.139269\n    \n    \n      5\n      007\n      5.736332\n      5.704887\n      4.365424\n      21.0\n      21.0\n      21223\n      21223\n      21223\n      6.625382\n    \n    \n      6\n      008\n      -1.099762\n      -2.221917\n      -1.689137\n      NaN\n      NaN\n      2197\n      2197\n      2197\n      0.824648\n    \n    \n      7\n      009\n      -1.163220\n      -3.380190\n      -2.896337\n      NaN\n      NaN\n      2033\n      2033\n      2033\n      0.030578\n    \n    \n      8\n      010\n      0.533438\n      0.970945\n      1.509073\n      2.0\n      6.0\n      6854\n      6854\n      6854\n      5.337547\n    \n    \n      9\n      011\n      -0.609511\n      -2.192476\n      -1.621580\n      5.0\n      NaN\n      4773\n      4773\n      4773\n      0.536468\n    \n    \n      10\n      012\n      0.688221\n      0.177062\n      0.829076\n      NaN\n      8.0\n      7239\n      7239\n      7239\n      2.178372\n    \n    \n      11\n      013\n      0.183677\n      -1.641095\n      -1.434769\n      NaN\n      4.0\n      5442\n      5442\n      5442\n      0.709527\n    \n    \n      12\n      014\n      -1.302296\n      -0.115571\n      0.024759\n      21.0\n      23.0\n      5449\n      5449\n      5449\n      1.091633\n    \n    \n      13\n      015\n      -0.151071\n      1.786959\n      2.497975\n      44.0\n      97.0\n      11005\n      11005\n      11005\n      1.298807\n    \n    \n      14\n      016\n      -1.227027\n      -0.369035\n      -1.343037\n      15.0\n      8.0\n      5347\n      5347\n      5347\n      1.574163\n    \n    \n      15\n      017\n      -0.609259\n      1.085217\n      -0.414850\n      30.0\n      28.0\n      7080\n      7080\n      7080\n      1.608631"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "4  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  }
]